# Generated by Django 5.1.5 on 2025-01-24 18:39

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='BalancingAuthority',
            fields=[
                ('bacode', models.CharField(max_length=7, primary_key=True, serialize=False, unique=True)),
                ('baname', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'balancing_authority',
            },
        ),
        migrations.CreateModel(
            name='County',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cntyname', models.CharField(max_length=500)),
                ('fipscnty', models.CharField(max_length=500)),
            ],
            options={
                'db_table': 'county',
            },
        ),
        migrations.CreateModel(
            name='EgridSubrgn',
            fields=[
                ('subrgn', models.CharField(max_length=2, primary_key=True, serialize=False)),
                ('srname', models.CharField(max_length=2)),
            ],
            options={
                'db_table': 'egrid_subrgn',
            },
        ),
        migrations.CreateModel(
            name='NercRegion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nerc_abbrev', models.CharField(max_length=5)),
                ('nerc', models.CharField(max_length=500)),
            ],
            options={
                'db_table': 'nerc_region',
            },
        ),
        migrations.CreateModel(
            name='Plant',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('seqplt', models.IntegerField(blank=True, null=True)),
                ('orispl', models.IntegerField(blank=True, null=True, unique=True)),
                ('pstatabb', models.CharField(blank=True, max_length=1000, null=True)),
                ('fipsst', models.CharField(blank=True, max_length=1000, null=True)),
                ('plant_name', models.CharField(blank=True, max_length=1000, null=True)),
                ('oprcode', models.IntegerField(blank=True, null=True)),
                ('utlsrvid', models.IntegerField(blank=True, null=True)),
                ('sector_id', models.CharField(blank=True, max_length=1000, null=True)),
                ('bacode', models.CharField(blank=True, max_length=1000, null=True)),
                ('nerc', models.CharField(blank=True, max_length=1000, null=True)),
                ('fipscnty', models.IntegerField(blank=True, null=True)),
                ('lat', models.FloatField(blank=True, null=True)),
                ('lon', models.FloatField(blank=True, null=True)),
                ('numunt', models.IntegerField(blank=True, null=True)),
                ('numgen', models.IntegerField(blank=True, null=True)),
                ('plprmfl', models.CharField(blank=True, max_length=1000, null=True)),
                ('plfuelct', models.CharField(blank=True, max_length=1000, null=True)),
                ('coalflagind', models.CharField(blank=True, max_length=1000, null=True)),
                ('subrgn_id', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'plant',
            },
        ),
        migrations.CreateModel(
            name='PlantDistributionSys',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('oprcode', models.IntegerField(blank=True, null=True)),
                ('oprname', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'plant_distribution_sys',
            },
        ),
        migrations.CreateModel(
            name='Sector',
            fields=[
                ('sector_id', models.AutoField(primary_key=True, serialize=False)),
                ('sector', models.CharField(max_length=500)),
            ],
            options={
                'db_table': 'sector',
            },
        ),
        migrations.CreateModel(
            name='State',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fipsst', models.CharField(max_length=500, unique=True)),
                ('pstatabb', models.CharField(max_length=2)),
            ],
            options={
                'db_table': 'state',
            },
        ),
        migrations.CreateModel(
            name='Utility',
            fields=[
                ('utlsrvid', models.IntegerField(primary_key=True, serialize=False, unique=True)),
                ('utlsrvnm', models.CharField(max_length=500)),
            ],
            options={
                'db_table': 'utility',
            },
        ),
        migrations.CreateModel(
            name='BaFuelTypeGeneration',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('bagenacl', models.FloatField(blank=True, null=True)),
                ('bagenaol', models.FloatField(blank=True, null=True)),
                ('bagenags', models.FloatField(blank=True, null=True)),
                ('bagenanc', models.FloatField(blank=True, null=True)),
                ('bagenahy', models.FloatField(blank=True, null=True)),
                ('bagenabm', models.FloatField(blank=True, null=True)),
                ('bagenawi', models.FloatField(blank=True, null=True)),
                ('bagenaso', models.FloatField(blank=True, null=True)),
                ('bagenagt', models.FloatField(blank=True, null=True)),
                ('bagenaof', models.FloatField(blank=True, null=True)),
                ('bagenaop', models.FloatField(blank=True, null=True)),
                ('bagenatn', models.FloatField(blank=True, null=True)),
                ('bagenatr', models.FloatField(blank=True, null=True)),
                ('bagenath', models.FloatField(blank=True, null=True)),
                ('bagenacy', models.FloatField(blank=True, null=True)),
                ('bagenacn', models.FloatField(blank=True, null=True)),
                ('year', models.IntegerField(blank=True, null=True)),
                ('bacode', models.ForeignKey(db_column='bacode', on_delete=django.db.models.deletion.CASCADE, to='egrid.balancingauthority')),
            ],
            options={
                'db_table': 'ba_fuel_type_generation',
            },
        ),
        migrations.CreateModel(
            name='BaFuelTypeEmissionRate',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('bacnoxrt', models.FloatField(blank=True, null=True)),
                ('baonoxrt', models.FloatField(blank=True, null=True)),
                ('bagnoxrt', models.FloatField(blank=True, null=True)),
                ('bafsnxrt', models.FloatField(blank=True, null=True)),
                ('bacnxort', models.FloatField(blank=True, null=True)),
                ('baonxort', models.FloatField(blank=True, null=True)),
                ('bagnxort', models.FloatField(blank=True, null=True)),
                ('bafsnort', models.FloatField(blank=True, null=True)),
                ('bacso2rt', models.FloatField(blank=True, null=True)),
                ('baoso2rt', models.FloatField(blank=True, null=True)),
                ('bagso2rt', models.FloatField(blank=True, null=True)),
                ('bafss2rt', models.FloatField(blank=True, null=True)),
                ('bacco2rt', models.FloatField(blank=True, null=True)),
                ('baoco2rt', models.FloatField(blank=True, null=True)),
                ('bagco2rt', models.FloatField(blank=True, null=True)),
                ('bafsc2rt', models.FloatField(blank=True, null=True)),
                ('bacch4rt', models.FloatField(blank=True, null=True)),
                ('baoch4rt', models.FloatField(blank=True, null=True)),
                ('bagch4rt', models.FloatField(blank=True, null=True)),
                ('bafch4rt', models.FloatField(blank=True, null=True)),
                ('bacn2ort', models.FloatField(blank=True, null=True)),
                ('baon2ort', models.FloatField(blank=True, null=True)),
                ('bagn2ort', models.FloatField(blank=True, null=True)),
                ('bafn2ort', models.FloatField(blank=True, null=True)),
                ('bacc2ert', models.FloatField(blank=True, null=True)),
                ('baoc2ert', models.FloatField(blank=True, null=True)),
                ('bagc2ert', models.FloatField(blank=True, null=True)),
                ('bachgrt', models.FloatField(blank=True, null=True)),
                ('bafshgrt', models.FloatField(blank=True, null=True)),
                ('bacnoxr', models.FloatField(blank=True, null=True)),
                ('baonoxr', models.FloatField(blank=True, null=True)),
                ('bagnoxr', models.FloatField(blank=True, null=True)),
                ('bafsnxr', models.FloatField(blank=True, null=True)),
                ('bacnxor', models.FloatField(blank=True, null=True)),
                ('baonxor', models.FloatField(blank=True, null=True)),
                ('bagnxor', models.FloatField(blank=True, null=True)),
                ('bafsnor', models.FloatField(blank=True, null=True)),
                ('bacso2r', models.FloatField(blank=True, null=True)),
                ('baoso2r', models.FloatField(blank=True, null=True)),
                ('bagso2r', models.FloatField(blank=True, null=True)),
                ('bafss2r', models.FloatField(blank=True, null=True)),
                ('bacco2r', models.FloatField(blank=True, null=True)),
                ('baoco2r', models.FloatField(blank=True, null=True)),
                ('bagco2r', models.FloatField(blank=True, null=True)),
                ('bafsc2r', models.FloatField(blank=True, null=True)),
                ('bacch4r', models.FloatField(blank=True, null=True)),
                ('baoch4r', models.FloatField(blank=True, null=True)),
                ('bagch4r', models.FloatField(blank=True, null=True)),
                ('bafch4r', models.FloatField(blank=True, null=True)),
                ('bacn2or', models.FloatField(blank=True, null=True)),
                ('baon2or', models.FloatField(blank=True, null=True)),
                ('bagn2or', models.FloatField(blank=True, null=True)),
                ('bafn2or', models.FloatField(blank=True, null=True)),
                ('bacc2er', models.FloatField(blank=True, null=True)),
                ('baoc2er', models.FloatField(blank=True, null=True)),
                ('bagc2er', models.FloatField(blank=True, null=True)),
                ('bafsc2er', models.FloatField(blank=True, null=True)),
                ('bachgr', models.FloatField(blank=True, null=True)),
                ('bafshgr', models.FloatField(blank=True, null=True)),
                ('year', models.IntegerField(blank=True, null=True)),
                ('bacode', models.ForeignKey(db_column='bacode', on_delete=django.db.models.deletion.CASCADE, to='egrid.balancingauthority')),
            ],
            options={
                'db_table': 'ba_fuel_type_emission_rate',
            },
        ),
        migrations.CreateModel(
            name='BaEmissionRate',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('banoxrta', models.FloatField(blank=True, null=True)),
                ('banoxrto', models.FloatField(blank=True, null=True)),
                ('baso2rta', models.FloatField(blank=True, null=True)),
                ('baco2rta', models.FloatField(blank=True, null=True)),
                ('bach4rta', models.FloatField(blank=True, null=True)),
                ('ban2orta', models.FloatField(blank=True, null=True)),
                ('bac2erta', models.FloatField(blank=True, null=True)),
                ('bahgrta', models.FloatField(blank=True, null=True)),
                ('banoxra', models.FloatField(blank=True, null=True)),
                ('banoxro', models.FloatField(blank=True, null=True)),
                ('baso2ra', models.FloatField(blank=True, null=True)),
                ('baco2ra', models.FloatField(blank=True, null=True)),
                ('bach4ra', models.FloatField(blank=True, null=True)),
                ('ban2ora', models.FloatField(blank=True, null=True)),
                ('bac2era', models.FloatField(blank=True, null=True)),
                ('bahgra', models.FloatField(blank=True, null=True)),
                ('banoxcrt', models.FloatField(blank=True, null=True)),
                ('banoxcro', models.FloatField(blank=True, null=True)),
                ('baso2crt', models.FloatField(blank=True, null=True)),
                ('baco2crt', models.FloatField(blank=True, null=True)),
                ('bach4crt', models.FloatField(blank=True, null=True)),
                ('ban2ocrt', models.FloatField(blank=True, null=True)),
                ('bac2ecrt', models.FloatField(blank=True, null=True)),
                ('bahgcrt', models.FloatField(blank=True, null=True)),
                ('year', models.IntegerField(blank=True, null=True)),
                ('bacode', models.ForeignKey(db_column='bacode', on_delete=django.db.models.deletion.CASCADE, to='egrid.balancingauthority')),
            ],
            options={
                'db_table': 'ba_emission_rate',
            },
        ),
        migrations.CreateModel(
            name='BAAnnualCombustion',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('bahtian', models.FloatField(blank=True, null=True)),
                ('bahtioz', models.FloatField(blank=True, null=True)),
                ('bahtiant', models.FloatField(blank=True, null=True)),
                ('bahtiozt', models.FloatField(blank=True, null=True)),
                ('bangenan', models.FloatField(blank=True, null=True)),
                ('bangenoz', models.FloatField(blank=True, null=True)),
                ('banoxan', models.FloatField(blank=True, null=True)),
                ('banoxoz', models.FloatField(blank=True, null=True)),
                ('baso2an', models.FloatField(blank=True, null=True)),
                ('baco2an', models.FloatField(blank=True, null=True)),
                ('bach4an', models.FloatField(blank=True, null=True)),
                ('ban2oan', models.FloatField(blank=True, null=True)),
                ('baco2eqa', models.FloatField(blank=True, null=True)),
                ('bahgan', models.FloatField(blank=True, null=True)),
                ('year', models.IntegerField(blank=True, null=True)),
                ('bacode', models.ForeignKey(db_column='bacode', on_delete=django.db.models.deletion.CASCADE, to='egrid.balancingauthority')),
            ],
            options={
                'db_table': 'ba_annual_combustion',
            },
        ),
        migrations.CreateModel(
            name='BaNonBaseloadEmissionRate',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('banbnox', models.FloatField(blank=True, null=True)),
                ('banbnxo', models.FloatField(blank=True, null=True)),
                ('banbso2', models.FloatField(blank=True, null=True)),
                ('banbco2', models.FloatField(blank=True, null=True)),
                ('banbch4', models.FloatField(blank=True, null=True)),
                ('banbn2o', models.FloatField(blank=True, null=True)),
                ('banbc2e', models.FloatField(blank=True, null=True)),
                ('banbhg', models.FloatField(blank=True, null=True)),
                ('banbgncl', models.FloatField(blank=True, null=True)),
                ('banbgnol', models.FloatField(blank=True, null=True)),
                ('banbgngs', models.FloatField(blank=True, null=True)),
                ('banbgnnc', models.FloatField(blank=True, null=True)),
                ('banbgnhy', models.FloatField(blank=True, null=True)),
                ('banbgnbm', models.FloatField(blank=True, null=True)),
                ('banbgnwi', models.FloatField(blank=True, null=True)),
                ('banbgnso', models.FloatField(blank=True, null=True)),
                ('banbgngt', models.FloatField(blank=True, null=True)),
                ('banbgnof', models.FloatField(blank=True, null=True)),
                ('banbgnop', models.FloatField(blank=True, null=True)),
                ('banbclpr', models.FloatField(blank=True, null=True)),
                ('banbolpr', models.FloatField(blank=True, null=True)),
                ('banbgspr', models.FloatField(blank=True, null=True)),
                ('banbncpr', models.FloatField(blank=True, null=True)),
                ('banbhypr', models.FloatField(blank=True, null=True)),
                ('banbbmpr', models.FloatField(blank=True, null=True)),
                ('banbwipr', models.FloatField(blank=True, null=True)),
                ('banbsopr', models.FloatField(blank=True, null=True)),
                ('banbgtpr', models.FloatField(blank=True, null=True)),
                ('banbofpr', models.FloatField(blank=True, null=True)),
                ('bacode', models.ForeignKey(db_column='bacode', on_delete=django.db.models.deletion.CASCADE, to='egrid.balancingauthority')),
            ],
            options={
                'db_table': 'ba_nonbaseload_emission_rate',
            },
        ),
        migrations.CreateModel(
            name='BaResourceMix',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('baclpr', models.FloatField(blank=True, null=True)),
                ('baolpr', models.FloatField(blank=True, null=True)),
                ('bagspr', models.FloatField(blank=True, null=True)),
                ('bancpr', models.FloatField(blank=True, null=True)),
                ('bahypr', models.FloatField(blank=True, null=True)),
                ('babmpr', models.FloatField(blank=True, null=True)),
                ('bawipr', models.FloatField(blank=True, null=True)),
                ('basopr', models.FloatField(blank=True, null=True)),
                ('bagtpr', models.FloatField(blank=True, null=True)),
                ('baofpr', models.FloatField(blank=True, null=True)),
                ('baoppr', models.FloatField(blank=True, null=True)),
                ('batnpr', models.FloatField(blank=True, null=True)),
                ('batrpr', models.FloatField(blank=True, null=True)),
                ('bathpr', models.FloatField(blank=True, null=True)),
                ('bacypr', models.FloatField(blank=True, null=True)),
                ('bacnpr', models.FloatField(blank=True, null=True)),
                ('bacode', models.ForeignKey(db_column='bacode', on_delete=django.db.models.deletion.CASCADE, to='egrid.balancingauthority')),
            ],
            options={
                'db_table': 'ba_resource_mix',
            },
        ),
        migrations.CreateModel(
            name='Generator',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('seqgen', models.FloatField(blank=True, null=True)),
                ('genid', models.FloatField(blank=True, null=True, unique=True)),
                ('numblr', models.FloatField(blank=True, null=True)),
                ('genstat', models.CharField(max_length=500)),
                ('prmvr', models.CharField(max_length=500)),
                ('fuelg1', models.CharField(max_length=500)),
                ('namepcap', models.FloatField(blank=True, null=True)),
                ('cfact', models.FloatField(blank=True, null=True)),
                ('genntan', models.FloatField(blank=True, null=True)),
                ('genntoz', models.FloatField(blank=True, null=True)),
                ('genersrc', models.CharField(max_length=500)),
                ('genyronl', models.FloatField(blank=True, null=True)),
                ('genyrret', models.FloatField(blank=True, null=True)),
                ('year', models.IntegerField(blank=True, null=True)),
                ('orispl', models.ForeignKey(db_column='orispl', on_delete=django.db.models.deletion.CASCADE, to='egrid.plant')),
            ],
            options={
                'db_table': 'generator',
            },
        ),
        migrations.CreateModel(
            name='PlantEmissionRate',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('plnoxrta', models.FloatField(blank=True, null=True)),
                ('plnoxra', models.FloatField(blank=True, null=True)),
                ('plnoxro', models.FloatField(blank=True, null=True)),
                ('plso2ra', models.FloatField(blank=True, null=True)),
                ('plco2ra', models.FloatField(blank=True, null=True)),
                ('plch4ra', models.FloatField(blank=True, null=True)),
                ('pln2ora', models.FloatField(blank=True, null=True)),
                ('plc2era', models.FloatField(blank=True, null=True)),
                ('plhgra', models.FloatField(blank=True, null=True)),
                ('plnoxcrt', models.FloatField(blank=True, null=True)),
                ('plnoxcro', models.FloatField(blank=True, null=True)),
                ('plso2crt', models.FloatField(blank=True, null=True)),
                ('plco2crt', models.FloatField(blank=True, null=True)),
                ('plch4crt', models.FloatField(blank=True, null=True)),
                ('pln2ocrt', models.FloatField(blank=True, null=True)),
                ('plc2ecrt', models.FloatField(blank=True, null=True)),
                ('plhgcrt', models.FloatField(blank=True, null=True)),
                ('year', models.IntegerField(blank=True, null=True)),
                ('orispl', models.ForeignKey(db_column='orispl', on_delete=django.db.models.deletion.CASCADE, to='egrid.plant')),
            ],
            options={
                'db_table': 'plant_emission_rate',
            },
        ),
        migrations.CreateModel(
            name='PlantFuelTypeGeneration',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('plgenacl', models.FloatField(blank=True, null=True)),
                ('plgenaol', models.FloatField(blank=True, null=True)),
                ('plgenags', models.FloatField(blank=True, null=True)),
                ('plgenanc', models.FloatField(blank=True, null=True)),
                ('plgenahy', models.FloatField(blank=True, null=True)),
                ('plgenabm', models.FloatField(blank=True, null=True)),
                ('plgenawi', models.FloatField(blank=True, null=True)),
                ('plgenaso', models.FloatField(blank=True, null=True)),
                ('plgenagt', models.FloatField(blank=True, null=True)),
                ('plgenaof', models.FloatField(blank=True, null=True)),
                ('plgenaop', models.FloatField(blank=True, null=True)),
                ('plgenacy', models.FloatField(blank=True, null=True)),
                ('plgenacn', models.FloatField(blank=True, null=True)),
                ('plgenatn', models.FloatField(blank=True, null=True)),
                ('plgenatr', models.FloatField(blank=True, null=True)),
                ('plgenath', models.FloatField(blank=True, null=True)),
                ('year', models.IntegerField(blank=True, null=True)),
                ('orispl', models.ForeignKey(db_column='orispl', on_delete=django.db.models.deletion.CASCADE, to='egrid.plant')),
            ],
            options={
                'db_table': 'plant_fuel_type_generation',
            },
        ),
        migrations.CreateModel(
            name='PlantResourceMix',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('plclpr', models.FloatField(blank=True, null=True)),
                ('plolpr', models.FloatField(blank=True, null=True)),
                ('plgspr', models.FloatField(blank=True, null=True)),
                ('plncpr', models.FloatField(blank=True, null=True)),
                ('plhypr', models.FloatField(blank=True, null=True)),
                ('plbmpr', models.FloatField(blank=True, null=True)),
                ('plwipr', models.FloatField(blank=True, null=True)),
                ('plsopr', models.FloatField(blank=True, null=True)),
                ('plgtpr', models.FloatField(blank=True, null=True)),
                ('plofpr', models.FloatField(blank=True, null=True)),
                ('ploppr', models.FloatField(blank=True, null=True)),
                ('year', models.IntegerField(blank=True, null=True)),
                ('orispl', models.ForeignKey(db_column='orispl', on_delete=django.db.models.deletion.CASCADE, to='egrid.plant')),
            ],
            options={
                'db_table': 'plant_resource_mix',
            },
        ),
        migrations.CreateModel(
            name='StateAnnualCombustion',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('sthtian', models.FloatField(blank=True, null=True)),
                ('sthtioz', models.FloatField(blank=True, null=True)),
                ('sthtiant', models.FloatField(blank=True, null=True)),
                ('sthtiozt', models.FloatField(blank=True, null=True)),
                ('stngenan', models.FloatField(blank=True, null=True)),
                ('stngenoz', models.FloatField(blank=True, null=True)),
                ('stnoxan', models.FloatField(blank=True, null=True)),
                ('stnoxoz', models.FloatField(blank=True, null=True)),
                ('stso2an', models.FloatField(blank=True, null=True)),
                ('stco2an', models.FloatField(blank=True, null=True)),
                ('stch4an', models.FloatField(blank=True, null=True)),
                ('stn2oan', models.FloatField(blank=True, null=True)),
                ('stco2eqa', models.FloatField(blank=True, null=True)),
                ('sthgan', models.FloatField(blank=True, null=True)),
                ('year', models.IntegerField(blank=True, null=True)),
                ('fipsst', models.ForeignKey(db_column='fipsst', on_delete=django.db.models.deletion.CASCADE, to='egrid.plant')),
            ],
            options={
                'db_table': 'state_annual_combustion',
            },
        ),
        migrations.CreateModel(
            name='StateEmissionRate',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('stnoxrta', models.FloatField(blank=True, null=True)),
                ('stnoxrto', models.FloatField(blank=True, null=True)),
                ('stso2rta', models.FloatField(blank=True, null=True)),
                ('stco2rta', models.FloatField(blank=True, null=True)),
                ('stch4rta', models.FloatField(blank=True, null=True)),
                ('stn2orta', models.FloatField(blank=True, null=True)),
                ('stc2erta', models.FloatField(blank=True, null=True)),
                ('sthgrta', models.FloatField(blank=True, null=True)),
                ('stnoxra', models.FloatField(blank=True, null=True)),
                ('stnoxro', models.FloatField(blank=True, null=True)),
                ('stso2ra', models.FloatField(blank=True, null=True)),
                ('stco2ra', models.FloatField(blank=True, null=True)),
                ('stch4ra', models.FloatField(blank=True, null=True)),
                ('stn2ora', models.FloatField(blank=True, null=True)),
                ('stc2era', models.FloatField(blank=True, null=True)),
                ('sthgra', models.FloatField(blank=True, null=True)),
                ('stnoxcrt', models.FloatField(blank=True, null=True)),
                ('stnoxcro', models.FloatField(blank=True, null=True)),
                ('stso2crt', models.FloatField(blank=True, null=True)),
                ('stco2crt', models.FloatField(blank=True, null=True)),
                ('stch4crt', models.FloatField(blank=True, null=True)),
                ('stn2ocrt', models.FloatField(blank=True, null=True)),
                ('stc2ecrt', models.FloatField(blank=True, null=True)),
                ('sthgcrt', models.FloatField(blank=True, null=True)),
                ('year', models.IntegerField(blank=True, null=True)),
                ('fipsst', models.ForeignKey(db_column='fipsst', on_delete=django.db.models.deletion.CASCADE, to='egrid.plant')),
            ],
            options={
                'db_table': 'state_emission_rate',
            },
        ),
        migrations.CreateModel(
            name='StateFuelTypeEmissionRate',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('stcnoxrt', models.FloatField(blank=True, null=True)),
                ('stonoxrt', models.FloatField(blank=True, null=True)),
                ('stgnoxrt', models.FloatField(blank=True, null=True)),
                ('stfsnxrt', models.FloatField(blank=True, null=True)),
                ('stcnxort', models.FloatField(blank=True, null=True)),
                ('stonxort', models.FloatField(blank=True, null=True)),
                ('stgnxort', models.FloatField(blank=True, null=True)),
                ('stfsnort', models.FloatField(blank=True, null=True)),
                ('stcso2rt', models.FloatField(blank=True, null=True)),
                ('stoso2rt', models.FloatField(blank=True, null=True)),
                ('stgso2rt', models.FloatField(blank=True, null=True)),
                ('stfss2rt', models.FloatField(blank=True, null=True)),
                ('stcco2rt', models.FloatField(blank=True, null=True)),
                ('stoco2rt', models.FloatField(blank=True, null=True)),
                ('stgco2rt', models.FloatField(blank=True, null=True)),
                ('stfsc2rt', models.FloatField(blank=True, null=True)),
                ('stcch4rt', models.FloatField(blank=True, null=True)),
                ('stoch4rt', models.FloatField(blank=True, null=True)),
                ('stgch4rt', models.FloatField(blank=True, null=True)),
                ('stfch4rt', models.FloatField(blank=True, null=True)),
                ('stcn2ort', models.FloatField(blank=True, null=True)),
                ('ston2ort', models.FloatField(blank=True, null=True)),
                ('stgn2ort', models.FloatField(blank=True, null=True)),
                ('stfn2ort', models.FloatField(blank=True, null=True)),
                ('stcc2ert', models.FloatField(blank=True, null=True)),
                ('stoc2ert', models.FloatField(blank=True, null=True)),
                ('stgc2ert', models.FloatField(blank=True, null=True)),
                ('stfsc2ert', models.FloatField(blank=True, null=True)),
                ('stchgrt', models.FloatField(blank=True, null=True)),
                ('stfshgrt', models.FloatField(blank=True, null=True)),
                ('stcnoxr', models.FloatField(blank=True, null=True)),
                ('stonoxr', models.FloatField(blank=True, null=True)),
                ('stgnoxr', models.FloatField(blank=True, null=True)),
                ('stfsnxr', models.FloatField(blank=True, null=True)),
                ('stcnxor', models.FloatField(blank=True, null=True)),
                ('stonxor', models.FloatField(blank=True, null=True)),
                ('stgnxor', models.FloatField(blank=True, null=True)),
                ('stfsnor', models.FloatField(blank=True, null=True)),
                ('stcso2r', models.FloatField(blank=True, null=True)),
                ('stoso2r', models.FloatField(blank=True, null=True)),
                ('stgso2r', models.FloatField(blank=True, null=True)),
                ('stfss2r', models.FloatField(blank=True, null=True)),
                ('stcco2r', models.FloatField(blank=True, null=True)),
                ('stoco2r', models.FloatField(blank=True, null=True)),
                ('stgco2r', models.FloatField(blank=True, null=True)),
                ('stfsc2r', models.FloatField(blank=True, null=True)),
                ('stcch4r', models.FloatField(blank=True, null=True)),
                ('stoch4r', models.FloatField(blank=True, null=True)),
                ('stgch4r', models.FloatField(blank=True, null=True)),
                ('stfch4r', models.FloatField(blank=True, null=True)),
                ('stcn2or', models.FloatField(blank=True, null=True)),
                ('ston2or', models.FloatField(blank=True, null=True)),
                ('stgn2or', models.FloatField(blank=True, null=True)),
                ('stfn2or', models.FloatField(blank=True, null=True)),
                ('stcc2er', models.FloatField(blank=True, null=True)),
                ('stoc2er', models.FloatField(blank=True, null=True)),
                ('stgc2er', models.FloatField(blank=True, null=True)),
                ('stfsc2er', models.FloatField(blank=True, null=True)),
                ('stchgr', models.FloatField(blank=True, null=True)),
                ('stfshgr', models.FloatField(blank=True, null=True)),
                ('year', models.IntegerField(blank=True, null=True)),
                ('fipsst', models.ForeignKey(db_column='fipsst', on_delete=django.db.models.deletion.CASCADE, to='egrid.plant')),
            ],
            options={
                'db_table': 'state_fuel_type_emission_rate',
            },
        ),
        migrations.CreateModel(
            name='StateFuelTypeGeneration',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('stgenacl', models.FloatField(blank=True, null=True)),
                ('stgenaol', models.FloatField(blank=True, null=True)),
                ('stgenaso', models.FloatField(blank=True, null=True)),
                ('stgenagt', models.FloatField(blank=True, null=True)),
                ('stgenaof', models.FloatField(blank=True, null=True)),
                ('stgenaop', models.FloatField(blank=True, null=True)),
                ('stgenatn', models.FloatField(blank=True, null=True)),
                ('stgenatr', models.FloatField(blank=True, null=True)),
                ('stgenath', models.FloatField(blank=True, null=True)),
                ('stgenacy', models.FloatField(blank=True, null=True)),
                ('stgenacn', models.FloatField(blank=True, null=True)),
                ('stgenags', models.FloatField(blank=True, null=True)),
                ('stgenanc', models.FloatField(blank=True, null=True)),
                ('stgenahy', models.FloatField(blank=True, null=True)),
                ('stgenabm', models.FloatField(blank=True, null=True)),
                ('stgenawi', models.FloatField(blank=True, null=True)),
                ('year', models.IntegerField(blank=True, null=True)),
                ('fipsst', models.ForeignKey(db_column='fipsst', on_delete=django.db.models.deletion.CASCADE, to='egrid.plant')),
            ],
            options={
                'db_table': 'state_fuel_type_generation',
            },
        ),
        migrations.CreateModel(
            name='StateNonBaseloadEmissionRate',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('stnbnox', models.FloatField(blank=True, null=True)),
                ('stnbnxo', models.FloatField(blank=True, null=True)),
                ('stnbso2', models.FloatField(blank=True, null=True)),
                ('stnbco2', models.FloatField(blank=True, null=True)),
                ('stnbch4', models.FloatField(blank=True, null=True)),
                ('stnbn2o', models.FloatField(blank=True, null=True)),
                ('stnbc2e', models.FloatField(blank=True, null=True)),
                ('stnbhg', models.FloatField(blank=True, null=True)),
                ('stnbgncl', models.FloatField(blank=True, null=True)),
                ('stnbgnol', models.FloatField(blank=True, null=True)),
                ('stnbgngs', models.FloatField(blank=True, null=True)),
                ('stnbgnnc', models.FloatField(blank=True, null=True)),
                ('stnbgnhy', models.FloatField(blank=True, null=True)),
                ('stnbgnbm', models.FloatField(blank=True, null=True)),
                ('stnbgnwi', models.FloatField(blank=True, null=True)),
                ('stnbgnso', models.FloatField(blank=True, null=True)),
                ('stnbgngt', models.FloatField(blank=True, null=True)),
                ('stnbgnof', models.FloatField(blank=True, null=True)),
                ('stnbgnop', models.FloatField(blank=True, null=True)),
                ('stnbclpr', models.FloatField(blank=True, null=True)),
                ('stnbolpr', models.FloatField(blank=True, null=True)),
                ('stnbgspr', models.FloatField(blank=True, null=True)),
                ('stnbncpr', models.FloatField(blank=True, null=True)),
                ('stnbhypr', models.FloatField(blank=True, null=True)),
                ('stnbbmpr', models.FloatField(blank=True, null=True)),
                ('stnbwipr', models.FloatField(blank=True, null=True)),
                ('stnbsopr', models.FloatField(blank=True, null=True)),
                ('stnbgtpr', models.FloatField(blank=True, null=True)),
                ('stnbofpr', models.FloatField(blank=True, null=True)),
                ('stnboppr', models.FloatField(blank=True, null=True)),
                ('year', models.IntegerField(blank=True, null=True)),
                ('fipsst', models.ForeignKey(db_column='fipsst', on_delete=django.db.models.deletion.CASCADE, to='egrid.plant')),
            ],
            options={
                'db_table': 'state_nonbaseload_emission_rate',
            },
        ),
        migrations.CreateModel(
            name='StateResourceMix',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('stclpr', models.FloatField(blank=True, null=True)),
                ('stolpr', models.FloatField(blank=True, null=True)),
                ('stgspr', models.FloatField(blank=True, null=True)),
                ('stncpr', models.FloatField(blank=True, null=True)),
                ('sthypr', models.FloatField(blank=True, null=True)),
                ('stbmpr', models.FloatField(blank=True, null=True)),
                ('stwipr', models.FloatField(blank=True, null=True)),
                ('stsopr', models.FloatField(blank=True, null=True)),
                ('stgtpr', models.FloatField(blank=True, null=True)),
                ('stofpr', models.FloatField(blank=True, null=True)),
                ('stoppr', models.FloatField(blank=True, null=True)),
                ('sttnpr', models.FloatField(blank=True, null=True)),
                ('sttrpr', models.FloatField(blank=True, null=True)),
                ('stthpr', models.FloatField(blank=True, null=True)),
                ('stcypr', models.FloatField(blank=True, null=True)),
                ('stcnpr', models.FloatField(blank=True, null=True)),
                ('year', models.IntegerField(blank=True, null=True)),
                ('fipsst', models.ForeignKey(db_column='fipsst', on_delete=django.db.models.deletion.CASCADE, to='egrid.plant')),
            ],
            options={
                'db_table': 'state_resource_mix',
            },
        ),
        migrations.CreateModel(
            name='SubrgnAnnualCombustion',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('srhtian', models.FloatField(blank=True, null=True)),
                ('srhtioz', models.FloatField(blank=True, null=True)),
                ('srhtiant', models.FloatField(blank=True, null=True)),
                ('srhtiozt', models.FloatField(blank=True, null=True)),
                ('srngenan', models.FloatField(blank=True, null=True)),
                ('srngenoz', models.FloatField(blank=True, null=True)),
                ('srnoxan', models.FloatField(blank=True, null=True)),
                ('srnoxoz', models.FloatField(blank=True, null=True)),
                ('srso2an', models.FloatField(blank=True, null=True)),
                ('srco2an', models.FloatField(blank=True, null=True)),
                ('srch4an', models.FloatField(blank=True, null=True)),
                ('srn2oan', models.FloatField(blank=True, null=True)),
                ('srco2eqa', models.FloatField(blank=True, null=True)),
                ('srhgan', models.FloatField(blank=True, null=True)),
                ('year', models.IntegerField(blank=True, null=True)),
                ('subrgn_id', models.ForeignKey(db_column='subrgn_id', on_delete=django.db.models.deletion.CASCADE, to='egrid.egridsubrgn')),
            ],
            options={
                'db_table': 'subrgn_annual_combustion',
            },
        ),
        migrations.CreateModel(
            name='SubrgnEmissionRate',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('srnoxrta', models.FloatField(blank=True, null=True)),
                ('srnoxrto', models.FloatField(blank=True, null=True)),
                ('srso2rta', models.FloatField(blank=True, null=True)),
                ('srco2rta', models.FloatField(blank=True, null=True)),
                ('srch4rta', models.FloatField(blank=True, null=True)),
                ('srn2orta', models.FloatField(blank=True, null=True)),
                ('src2erta', models.FloatField(blank=True, null=True)),
                ('srhgrta', models.FloatField(blank=True, null=True)),
                ('srnoxra', models.FloatField(blank=True, null=True)),
                ('srnoxro', models.FloatField(blank=True, null=True)),
                ('srso2ra', models.FloatField(blank=True, null=True)),
                ('srco2ra', models.FloatField(blank=True, null=True)),
                ('srch4ra', models.FloatField(blank=True, null=True)),
                ('srn2ora', models.FloatField(blank=True, null=True)),
                ('src2era', models.FloatField(blank=True, null=True)),
                ('srhgra', models.FloatField(blank=True, null=True)),
                ('srnoxcrt', models.FloatField(blank=True, null=True)),
                ('srnoxcro', models.FloatField(blank=True, null=True)),
                ('srso2crt', models.FloatField(blank=True, null=True)),
                ('srco2crt', models.FloatField(blank=True, null=True)),
                ('srch4crt', models.FloatField(blank=True, null=True)),
                ('srn2ocrt', models.FloatField(blank=True, null=True)),
                ('src2ecrt', models.FloatField(blank=True, null=True)),
                ('srhgcrt', models.FloatField(blank=True, null=True)),
                ('year', models.IntegerField(blank=True, null=True)),
                ('subrgn_id', models.ForeignKey(db_column='subrgn_id', on_delete=django.db.models.deletion.CASCADE, to='egrid.egridsubrgn')),
            ],
            options={
                'db_table': 'subrgn_emission_rate',
            },
        ),
        migrations.CreateModel(
            name='SubrgnFuelTypeEmissionRate',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('sronxort', models.FloatField(blank=True, null=True)),
                ('srgnxort', models.FloatField(blank=True, null=True)),
                ('srfsnort', models.FloatField(blank=True, null=True)),
                ('srcso2rt', models.FloatField(blank=True, null=True)),
                ('sroso2rt', models.FloatField(blank=True, null=True)),
                ('srgso2rt', models.FloatField(blank=True, null=True)),
                ('srfss2rt', models.FloatField(blank=True, null=True)),
                ('srcco2rt', models.FloatField(blank=True, null=True)),
                ('sroco2rt', models.FloatField(blank=True, null=True)),
                ('srgco2rt', models.FloatField(blank=True, null=True)),
                ('srfsc2rt', models.FloatField(blank=True, null=True)),
                ('srcch4rt', models.FloatField(blank=True, null=True)),
                ('sroch4rt', models.FloatField(blank=True, null=True)),
                ('srgch4rt', models.FloatField(blank=True, null=True)),
                ('srfch4rt', models.FloatField(blank=True, null=True)),
                ('srcn2ort', models.FloatField(blank=True, null=True)),
                ('sron2ort', models.FloatField(blank=True, null=True)),
                ('srgn2ort', models.FloatField(blank=True, null=True)),
                ('srfn2ort', models.FloatField(blank=True, null=True)),
                ('srcc2ert', models.FloatField(blank=True, null=True)),
                ('sroc2ert', models.FloatField(blank=True, null=True)),
                ('srgc2ert', models.FloatField(blank=True, null=True)),
                ('srfsc2ert', models.FloatField(blank=True, null=True)),
                ('srchgrt', models.FloatField(blank=True, null=True)),
                ('srfshgrt', models.FloatField(blank=True, null=True)),
                ('srcnoxr', models.FloatField(blank=True, null=True)),
                ('sronoxr', models.FloatField(blank=True, null=True)),
                ('srgnoxr', models.FloatField(blank=True, null=True)),
                ('srfsnxr', models.FloatField(blank=True, null=True)),
                ('srcnxor', models.FloatField(blank=True, null=True)),
                ('sronxor', models.FloatField(blank=True, null=True)),
                ('srgnxor', models.FloatField(blank=True, null=True)),
                ('srfsnor', models.FloatField(blank=True, null=True)),
                ('srcso2r', models.FloatField(blank=True, null=True)),
                ('sroso2r', models.FloatField(blank=True, null=True)),
                ('srgso2r', models.FloatField(blank=True, null=True)),
                ('srfss2r', models.FloatField(blank=True, null=True)),
                ('srcco2r', models.FloatField(blank=True, null=True)),
                ('sroco2r', models.FloatField(blank=True, null=True)),
                ('srgco2r', models.FloatField(blank=True, null=True)),
                ('srfsc2r', models.FloatField(blank=True, null=True)),
                ('srcch4r', models.FloatField(blank=True, null=True)),
                ('sroch4r', models.FloatField(blank=True, null=True)),
                ('srgch4r', models.FloatField(blank=True, null=True)),
                ('srfch4r', models.FloatField(blank=True, null=True)),
                ('srcn2or', models.FloatField(blank=True, null=True)),
                ('sron2or', models.FloatField(blank=True, null=True)),
                ('srgn2or', models.FloatField(blank=True, null=True)),
                ('srfn2or', models.FloatField(blank=True, null=True)),
                ('srcc2er', models.FloatField(blank=True, null=True)),
                ('sroc2er', models.FloatField(blank=True, null=True)),
                ('srgc2er', models.FloatField(blank=True, null=True)),
                ('srfsc2er', models.FloatField(blank=True, null=True)),
                ('srchgr', models.FloatField(blank=True, null=True)),
                ('srfshgr', models.FloatField(blank=True, null=True)),
                ('year', models.IntegerField(blank=True, null=True)),
                ('subrgn_id', models.ForeignKey(db_column='subrgn_id', on_delete=django.db.models.deletion.CASCADE, to='egrid.egridsubrgn')),
            ],
            options={
                'db_table': 'subrgn_fuel_type_emission_rate',
            },
        ),
    ]
